{
    "cache": {
    },
    "font_size": 17.0,
    "imgui": "[Window][Main]\nPos=0,23\nSize=2560,1346\nCollapsed=0\n\n[Window][Debug##Default]\nPos=60,60\nSize=400,400\nCollapsed=0\n\n[Window][Debug Window]\nPos=2204,1184\nSize=348,177\nCollapsed=0\nDockId=0x00000008,0\n\n[Window][Log]\nPos=666,1182\nSize=1536,179\nCollapsed=0\nDockId=0x00000006,1\n\n[Window][Compilation errors]\nPos=666,1182\nSize=1536,179\nCollapsed=0\nDockId=0x00000006,0\n\n[Window][Fractal parameters]\nPos=2204,58\nSize=348,1124\nCollapsed=0\nDockId=0x00000007,0\n\n[Window][Shader Editor]\nPos=8,58\nSize=656,1303\nCollapsed=0\nDockId=0x00000001,0\n\n[Docking][Data]\nDockSpace       ID=0x47F03CFA Window=0x1F1A625A Pos=8,58 Size=2544,1303 Split=X\n  DockNode      ID=0x00000003 Parent=0x47F03CFA SizeRef=2194,1307 Split=X\n    DockNode    ID=0x00000001 Parent=0x00000003 SizeRef=656,1307 Selected=0xD518A630\n    DockNode    ID=0x00000002 Parent=0x00000003 SizeRef=1536,1307 Split=Y\n      DockNode  ID=0x00000005 Parent=0x00000002 SizeRef=1693,1126 CentralNode=1\n      DockNode  ID=0x00000006 Parent=0x00000002 SizeRef=1693,179 Selected=0x1179EC09\n  DockNode      ID=0x00000004 Parent=0x47F03CFA SizeRef=348,1307 Split=Y Selected=0x8D41649C\n    DockNode    ID=0x00000007 Parent=0x00000004 SizeRef=348,1127 Selected=0x8D41649C\n    DockNode    ID=0x00000008 Parent=0x00000004 SizeRef=348,178 Selected=0x7C31ADA6\n\n",
    "opened": [
        {
            "active": true,
            "mirror": "",
            "unsaved": "Mandelbrot Template"
        },
        {
            "active": false,
            "mirror": "",
            "unsaved": "Mandelbrot4D"
        }
    ],
    "show": [
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0
    ],
    "unsaved": {
        "Mandelbrot Template": {
            "cache": [
                0,
                2,
                0,
                0,
                0,
                2,
                0,
                0,
                103,
                101,
                110,
                101,
                114,
                97,
                116,
                101,
                100,
                40,
                117,
                118,
                41,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                82,
                61,
                -44
            ],
            "compilers": [
                {
                    "isCurrent": true,
                    "languageName": "HLSL",
                    "shaderName": "Mandelbrot Template",
                    "source": "//CONTROLS:\n/*\nView:\nLMB+Mouse - grab and move\nW,S,A,D - movement\nQ,E,mouse wheel - zoom\n1 - show output square\n2 - show coordinate grid\nShift+mouse wheel - scale output square\nAlt+mouse wheel - rotate\n\n\nFractal:\nF - swith mode(Mandelbrot/Julia)\nUp,Down - accuracy\nLeft,right - contrast\nRBM - set Julia constant\nUp,Down - accuracy\n*/\n\n\n\n\n//It is possible to redefine float as double for better precision\n//(performance will be decreased significantly)\n//#define float2 double2\n//#define float double\n\n//define parameters\nstruct Parameters \n{\n    //space transform:\n    float2 move; \n    float zoom;\n    float rotation;\n    \n    //preview parameters:\n    bool showUVRect;\n    bool showSpaceMesh;\n    float previewScale;\n    \n    //fractal parameters:\n    float accuracy;\n    float contrast;\n    bool removeBanding;\n    int mode;//Mandelbrot or Julian (add current point or add constant)\n    float2 c;//Julian constant\n    float4 julia_color;\n    float4 mandelbrot_color;\n    \n \n    //reserved parameters,autoupdated by app:\n    float2 extent;//render area extent in pixels\n    float2 mouse_pos;//current mouse position in pixels\n    float2 mouse_delta;//mouse delta for the last frame in pixels\n    float mouse_wheel_delta;//mouse wheel delta for the last frame\n    bool lmb_down;//if left mouse button down\n    bool rmb_down;//if right mouse button down\n    bool mmb_down;//if middle mouse button down\n    float t;//time counter\n    float dt;//time passed from last frame\n};\n\nfloat4 colored(float val)\n{\n\tfloat cycle = 1;\n\tfloat4 colors[]={\n\tfloat4(0,0,0,1),\n\tfloat4(1,0,0,0.5),\n\tfloat4(1,1,1,1),\n\t};\n\t\n\tval=(val%cycle)/cycle;\n\tfor(int i=1;i<3;++i)\n\t{\n\t\tif(val<colors[i].a)\n\t\t\treturn float4(lerp(colors[i-1].xyz,colors[i].xyz, (val-colors[i-1].a)/(colors[i].a-colors[i-1].a)),1);\n\t}\n\t\n\t\n\treturn 0;\n}\n\n//define parameters variable p\nInputParameters(Parameters,p);\n\nfloat fractal(float2 x, float2 c)\n{\n    int i=0;\n    float2 z=x;\n    while(((z.x*z.x+z.y*z.y)<20)&&i<=p.accuracy)\n    {\n        z= float2(z.x * z.x - z.y * z.y, 2 * z.x * z.y)+c;\n        ++i;\n    }\n    if(i>=p.accuracy)\n        return 1;\n        \n    float val=i;\n    if(p.removeBanding)\n        val=clamp(val-log(log(length(z)))/log(2)+1,0,p.accuracy);\n    return pow(val/p.accuracy,p.contrast);\n}\n\nfloat2 uvToSpacePoint(float2 uv)\n{\n    float2x2 rot=float2x2(cos(p.rotation),sin(p.rotation),-sin(p.rotation),cos(p.rotation));\n    return rot*(uv / p.zoom +p.move);\n}\n\nfloat2 spacePointToUv(float2 spacePoint)\n{\n    float2x2 rot=float2x2(cos(p.rotation),sin(p.rotation),-sin(p.rotation),cos(p.rotation));\n    return  (transpose(rot)*spacePoint-p.move)*p.zoom;\n}\n\n//This function will be the result of export\n//Pass parameters through function arguments for dynamic parameters\nfloat4 output(float2 uv)\n{\n    float2 pos = uvToSpacePoint(uv);\n    \n    float4 result=0;\n    if(p.mode!=0)\n           result+= fractal(pos,p.c)*p.julia_color;\n    if(p.mode!=2)\n            result+= fractal(pos,pos)*p.mandelbrot_color;\n    return result;\n}\n\nfloat2 screenToUV(float2 screenPosition)\n{\n    screenPosition.y=-screenPosition.y;\n    float2 identitySquare;\n    if(p.extent.x>p.extent.y)\n        identitySquare=float2(p.extent.y/p.extent.x,1);\n    else\n        identitySquare=float2(1,p.extent.x/p.extent.y);\n    return (screenPosition+identitySquare*p.previewScale*0.5)/identitySquare/p.previewScale;\n}\n\n\n\n\n//Function is called for each pixel\n//and returns color for this pixel\n//you can use it to preview output function\n//this does not affect the export result\nfloat4 main(float4 position) : SV_TARGET\n{\n    float2 positionT=screenToUV(position);\n        \n    if (length(positionT-spacePointToUv(p.c))*p.previewScale<0.01)\n        return float4(1,0,0,1);\n    \n    if(p.showUVRect)\n    {\n        float w=0.005/p.previewScale;\n        float2 fr= frac(positionT);\n        if(step(-w,fr.y)-step(w,fr.y)+step(-w,fr.x)-step(w,fr.x))\n            return 1-output(positionT);\n    }\n    if(p.showSpaceMesh)\n    {\n        float w=0.005/p.previewScale;\n        float2 fr= frac(uvToSpacePoint(positionT));\n        if(step(-w,fr.y)-step(w,fr.y)+step(-w,fr.x)-step(w,fr.x))\n            return float4(0.5,0.5,1,1);\n    }\n    \n       return output(positionT);\n}\n\n\nfloat precisionAtPoint(float2 pos)\n{\n\treturn 0;\n}\n\n//this function called only once per frame before main\n//Allows to control parameters in one place\nvoid UpdateParameters(inout Parameters p) \n{\n    //scale with mouse wheel\n    if(!isKeyDown(KEY_LeftShift)&&!isKeyDown(KEY_LeftAlt))\n    {\n        float2 mouseBeforeZoom=screenToUV(p.mouse_pos/p.extent*2-1);\n        float zoomScale=exp(p.mouse_wheel_delta*0.1);\n        float2 mouseAfterZoom=mouseBeforeZoom*zoomScale;\n        p.zoom*=zoomScale;\n        p.move-=(mouseBeforeZoom-mouseAfterZoom)/p.zoom;\n     }\n     else if(isKeyDown(KEY_LeftAlt))//rotate with Alt and mouse wheel\n     {\n         float delta=p.mouse_wheel_delta*0.1*radians(30);\n         p.rotation+=delta;\n         float2x2 rot=float2x2(cos(delta),sin(delta),-sin(delta),cos(delta));\n         p.move=p.move*rot;\n     }\n     \n    //movement with mouse\n    if(p.lmb_down)\n        p.move-=float2(p.mouse_delta.x,-p.mouse_delta.y)/p.extent.y/p.zoom*2/p.previewScale;\n\n    //scale and move with keyboard\n    float scaleUpdate=exp((isKeyDown(KEY_E)-isKeyDown(KEY_Q) )*p.dt);\n    p.zoom=p.zoom*scaleUpdate;\n    p.move-=(0.5-0.5*scaleUpdate)/p.zoom;\n\n    float2 move_delta=float2(isKeyDown(KEY_D)-isKeyDown(KEY_A),isKeyDown(KEY_W)-isKeyDown(KEY_S));\n    p.move+=move_delta*p.dt/p.zoom;\n\n    //preview parameters control\n    if(isKeyPressed(KEY_1))\n        p.showUVRect=!p.showUVRect;\n    if(isKeyPressed(KEY_2))\n        p.showSpaceMesh=!p.showSpaceMesh;\n    if(isKeyDown(KEY_LeftShift))\n        p.previewScale*=exp(p.mouse_wheel_delta*0.1);\n\n    //limit parameters\n    if(p.zoom<=0)\n        p.zoom=0.1;\n        \n    //fractal parameters\n    p.accuracy*=exp((isKeyDown(KEY_UpArrow)-isKeyDown(KEY_DownArrow))*p.dt);\n    p.contrast*=exp((isKeyDown(KEY_RightArrow)-isKeyDown(KEY_LeftArrow))*p.dt*5);\n    p.mode=(p.mode+(isKeyPressed(KEY_F)||isKeyReleased(KEY_F)))%4;\n    //c point\n    if(p.rmb_down)\n        p.c=uvToSpacePoint(screenToUV(p.mouse_pos/p.extent*2-1));\n}\n\n"
                }
            ],
            "name": "Mandelbrot Template",
            "parameters": {
                "members": {
                    "accuracy": {
                        "data": [
                            -5,
                            -51,
                            -20,
                            65
                        ],
                        "metadata": null,
                        "name": "accuracy",
                        "offset": 28,
                        "type": "float"
                    },
                    "c": {
                        "data": [
                            -115,
                            118,
                            -70,
                            62,
                            -118,
                            -69,
                            31,
                            63,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "c",
                        "offset": 48,
                        "type": "vec2"
                    },
                    "contrast": {
                        "data": [
                            0,
                            0,
                            -128,
                            63
                        ],
                        "metadata": null,
                        "name": "contrast",
                        "offset": 32,
                        "type": "float"
                    },
                    "dt": {
                        "data": [
                            -108,
                            117,
                            -18,
                            59
                        ],
                        "metadata": null,
                        "name": "dt",
                        "offset": 140,
                        "type": "float"
                    },
                    "extent": {
                        "data": [
                            0,
                            0,
                            32,
                            69,
                            0,
                            32,
                            -85,
                            68
                        ],
                        "metadata": null,
                        "name": "extent",
                        "offset": 96,
                        "type": "vec2"
                    },
                    "julia_color": {
                        "data": [
                            -87,
                            -88,
                            40,
                            62,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            -128,
                            63,
                            0,
                            0,
                            -128,
                            63
                        ],
                        "metadata": null,
                        "name": "julia_color",
                        "offset": 64,
                        "type": "vec4"
                    },
                    "lmb_down": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "lmb_down",
                        "offset": 124,
                        "type": "uint"
                    },
                    "mandelbrot_color": {
                        "data": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            -128,
                            63,
                            -127,
                            -128,
                            0,
                            60,
                            0,
                            0,
                            -128,
                            63
                        ],
                        "metadata": null,
                        "name": "mandelbrot_color",
                        "offset": 80,
                        "type": "vec4"
                    },
                    "mmb_down": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "mmb_down",
                        "offset": 132,
                        "type": "uint"
                    },
                    "mode": {
                        "data": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "mode",
                        "offset": 40,
                        "type": "int"
                    },
                    "mouse_delta": {
                        "data": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            64,
                            64
                        ],
                        "metadata": null,
                        "name": "mouse_delta",
                        "offset": 112,
                        "type": "vec2"
                    },
                    "mouse_pos": {
                        "data": [
                            0,
                            0,
                            22,
                            67,
                            0,
                            0,
                            64,
                            -64
                        ],
                        "metadata": null,
                        "name": "mouse_pos",
                        "offset": 104,
                        "type": "vec2"
                    },
                    "mouse_wheel_delta": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "mouse_wheel_delta",
                        "offset": 120,
                        "type": "float"
                    },
                    "move": {
                        "data": [
                            -111,
                            81,
                            34,
                            -64,
                            -108,
                            -41,
                            -23,
                            -65
                        ],
                        "metadata": null,
                        "name": "move",
                        "offset": 0,
                        "type": "vec2"
                    },
                    "previewScale": {
                        "data": [
                            -47,
                            110,
                            -65,
                            63
                        ],
                        "metadata": null,
                        "name": "previewScale",
                        "offset": 24,
                        "type": "float"
                    },
                    "removeBanding": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "removeBanding",
                        "offset": 36,
                        "type": "uint"
                    },
                    "rmb_down": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "rmb_down",
                        "offset": 128,
                        "type": "uint"
                    },
                    "rotation": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "rotation",
                        "offset": 12,
                        "type": "float"
                    },
                    "showSpaceMesh": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "showSpaceMesh",
                        "offset": 20,
                        "type": "uint"
                    },
                    "showUVRect": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "showUVRect",
                        "offset": 16,
                        "type": "uint"
                    },
                    "t": {
                        "data": [
                            77,
                            -13,
                            -103,
                            67
                        ],
                        "metadata": null,
                        "name": "t",
                        "offset": 136,
                        "type": "float"
                    },
                    "zoom": {
                        "data": [
                            41,
                            -25,
                            -109,
                            62
                        ],
                        "metadata": null,
                        "name": "zoom",
                        "offset": 8,
                        "type": "float"
                    }
                },
                "size": 144
            }
        },
        "Mandelbrot4D": {
            "cache": [
                0,
                2,
                0,
                0,
                0,
                2,
                0,
                0,
                103,
                101,
                110,
                101,
                114,
                97,
                116,
                101,
                100,
                40,
                102,
                108,
                111,
                97,
                116,
                51,
                40,
                117,
                118,
                44,
                49,
                41,
                41,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "compilers": [
                {
                    "isCurrent": true,
                    "languageName": "HLSL",
                    "shaderName": "Mandelbrot4D",
                    "source": "//CONTROLS:\n/*\nView:\nLMB+Mouse - camera\nW,S,A,D,Q,E - movement\nF - swith mode\nL - lighting on/off (only in voxel mode)\nB - Box background\nC, V - voxel/step size\nMouse wheel - view angle\n\nFractal textue:\nUp,Down - Accuracy\nLeft, Right - alpha contrast\n*/\n\n\n\n//define parameters\nstruct Parameters \n{\n    //custom parameters:\n    float accuracy;\n    float w;\n    float ax;\n    float az;\n    float contrast;\n    float4 c;\n    \n    float opacity;\n    bool voxelMode;\n    bool lighting;\n    bool background;\n\n    //space transform:\n    float3 view_point; \n    float3x3 rotation;\n    float near;\n    float voxel_size;\n\n    float3 light_point;\n    float ambientLight;\n    \n    //preview parameters:\n    bool showUVRect;\n    bool showSpaceMesh;\n    float previewScale;\n\n    //reserved parameters,autoupdated by app:\n    float2 extent;//render area extent in pixels\n    float2 mouse_pos;//current mouse position in pixels\n    float2 mouse_delta;//mouse delta for the last frame in pixels\n    float mouse_wheel_delta;//mouse wheel delta for the last frame\n    bool lmb_down;//if left mouse button down\n    bool rmb_down;//if right mouse button down\n    bool mmb_down;//if middle mouse button down\n    float t;//time counter\n    float dt;//time passed from last frame\n    float4 dbg;\n};\n\n//define parameters variable p\nInputParameters(Parameters,p);\n\n\nfloat4 qmul(float4 q1, float4 q2)\n{\n    return float4(q1.w*q2.xyz + q2.w*q1.xyz + cross(q1.xyz,q2.xyz),\n                  q1.w*q2.w - dot(q1.xyz,q2.xyz));\n}\n\nfloat fractal(float3 v)\n{\n    float4 x= float4(v.x,v.y,p.w,v.z);\n    float4 q= x;\n    int i=0;\n    while(length(q.xyz)<2&&i<p.accuracy)\n    {\n        q=qmul(q,q)+p.c;\n        ++i;\n    }\n    \n    return pow(i/floor(p.accuracy),p.contrast);\n    if(i>=p.accuracy)\n        return 1;\n    return 0;\n}\n\n\nfloat random (float3 v)\n{\n    return frac(sin(dot(v,\n                         float3(12.9898,78.233,90.21212)))\n                 * 43758.5453123);\n}\n\nfloat3 random3(float3 v)\n{\n    return float3(random(v),\n    random(v+float3(0.111111,0.32121212,0.43313313))\n    ,random(v+float3(-0.11212,0.1244,0.145213)));\n}\n\n\nfloat4 output(float3 v)\n{\n    float f=fractal(v);\n    return float4(abs(v),f);\n    if(length(v)<0.3)\n    {\n        //return 1;\n        float f=(1-length(v));\n        f= f*f*(3.0-2.0*f);\n        return float4(random3(v),f);;\n    }\n    else\n        return 0;\n}\n\n\n\nfloat3 side(float3 p, float3 dir,float3 boxLowerCorner, float boxSize)\n{\n    float3 checkDirection= sign(dir);\n    float3 remainedBox=(checkDirection+1.0f)*(boxSize*0.5f)+boxLowerCorner-p;\n    float3 qubeizedDir=dir/remainedBox;//can be qNaN\n    float maxCoord=max(max(qubeizedDir[0],qubeizedDir[1]),qubeizedDir[2]);//max will discard qNaN when possible\n    float3 mask=step(maxCoord, qubeizedDir);\n    return mask*checkDirection;\n}\n\n\nfloat3x3 rotZ(float a)\n{\n\n    return float3x3(cos(a),sin(a),0,\n                    -sin(a),cos(a),0,\n                    0,0,1);\n}\n\nfloat3x3 rotX(float a)\n{\n\n    return float3x3(1,0,0,\n                    0,cos(a),sin(a),\n                    0,-sin(a),cos(a)\n                    );\n}\n\nfloat3 screenToSpace(float2 screenPoint,float near)\n{\n    float3 n=float3(screenPoint.x*p.extent.x/p.extent.y,p.near,-screenPoint.y);\n    return p.rotation*n;\n}\n\nbool lightTrace(float3 pos)\n{\n    float3 n=p.light_point-pos;\n    float len=length(n);\n    //n/=len;\n\n    float3 block_lower_corner=floor(pos/p.voxel_size)*p.voxel_size;\n\n    for(int i=0;i<300;++i)\n        {\n            float3 step= side(p.view_point,n,block_lower_corner,p.voxel_size);\n            block_lower_corner=round(block_lower_corner/p.voxel_size+step)*p.voxel_size;\n            //block_lower_corner=round(block_lower_corner/p.voxel_size)*p.voxel_size;\n            float4 f=output(block_lower_corner+p.voxel_size/2);\n            if(1-f.a<0.0001)\n                return 0;\n        }\n\n    return 1;\n}\n\nfloat3 lineFlatIntersection(float3 pos, float3 dir, float3 flatPos, float3 n)\n{\n    float d=dot(n,flatPos);\n    float t=(d-dot(n,pos))/dot(n,dir);\n    return pos+t*dir;\n}\n\nfloat4 voxelViewer(in float3 pos, in float3 n)\n{\n    float3 block_lower_corner=floor(pos/p.voxel_size)*p.voxel_size;\n\n    float4 res=0;\n    int maxI=4.0/p.voxel_size;\n    for(int i=0;i<maxI;++i)\n    {\n        float3 step= side(p.view_point,n,block_lower_corner,p.voxel_size);\n        block_lower_corner=round(block_lower_corner/p.voxel_size+step)*p.voxel_size;\n        //block_lower_corner=round(block_lower_corner/p.voxel_size)*p.voxel_size;\n        float4 f=output(block_lower_corner+p.voxel_size/2);\n\n\n        //lighting (show only opaque)\n        if(p.lighting)\n        {\n            if(1-f.a<0.0001) //show only opaque\n            {\n                float3 currentPos=lineFlatIntersection(pos,n,block_lower_corner+ (-step+1)/2.0*p.voxel_size ,-step);\n                float light=dot( step, normalize(currentPos-p.light_point )) *(1-p.ambientLight)*1+p.ambientLight;\n                return float4(f.xyz*light,1);\n                return float4(currentPos,1);\n            }\n        }\n        else//if light off blend colors\n        {\n            res=float4(res.xyz+f.xyz*(1-res.a)*f.a,1-(1-f.a)*(1-res.a));\n        }\n\n        if(1-res.a<0.0001)\n        {\n            res.a=1;\n            break;\n        }\n    }\n\n    return res;\n}\n\nfloat4 fogViewer(float3 pos, in float3 n)\n{\n    n=normalize(n);\n    //light loss per 1 unit\n    float density=p.opacity;\n    const float stepLength=p.voxel_size;\n    float stepLoss=1-pow(1-density,stepLength);\n\n    float4 res=0;\n    int maxI=3/stepLength;\n    for(int i=0;i<maxI;++i)\n    {\n        float4 f=output(pos);\n        f.a*=stepLoss;\n        res=float4(res.xyz+f.xyz*(1-res.a)*f.a,1-(1-f.a)*(1-res.a));\n        if(1-res.a<0.0001)\n        {\n            res.a=1;\n            break;\n        }\n        pos+=n*stepLength;\n    }\n    return res;\n}\n\n//Function is called for each pixel\n//and returns color for this pixel\n//you can use it to preview output function\n//this does not affect the export result\nfloat4 main(float2 position)\n{\n    float3 n=screenToSpace(position,0.3);\n    float4 bg=0.5+float4(side(p.view_point,n,-1,2),1)/2;\n\n    float4 res;\n    if(p.voxelMode)\n        res=voxelViewer(p.view_point, n);\n    else\n        res=fogViewer(p.view_point, n);\n\n\tif(p.background)\n    \treturn float4(lerp(bg,res,res.a).xyz,res.a);\n    else return res;\n    \n}\n\n\n\n//this function called only once per frame before main\n//Allows to control parameters in one place\nvoid UpdateParameters(inout Parameters p)\n{\n    if(p.lmb_down)\n    {\n        p.ax-=p.mouse_delta.y/p.extent.y*radians(360);\n        p.az-=p.mouse_delta.x/p.extent.y*radians(360);\n    }\n    p.rotation=rotZ(p.az)*rotX(p.ax);\n    p.near+=p.mouse_wheel_delta/100;\n\n    float3 view_point_delta=float3(isKeyDown(KEY_D)-isKeyDown(KEY_A),\n    isKeyDown(KEY_W)-isKeyDown(KEY_S),\n    isKeyDown(KEY_E)-isKeyDown(KEY_Q));\n    p.view_point+=p.rotation*view_point_delta*p.dt;\n\n    p.accuracy*=exp((isKeyDown(KEY_UpArrow)-isKeyDown(KEY_DownArrow))*p.dt*0.2);\n    p.contrast*=exp((isKeyDown(KEY_RightArrow)-isKeyDown(KEY_LeftArrow))*p.dt*0.5);\n\tp.voxel_size*=exp((isKeyDown(KEY_V)-isKeyDown(KEY_C))*p.dt*0.5);\n\n\n    if(isKeyPressed(KEY_F))\n        p.voxelMode=!p.voxelMode;\n    if(isKeyPressed(KEY_L))\n        p.lighting=!p.lighting;\n    if(p.rmb_down)\n        p.light_point=p.view_point;\n    if(isKeyPressed(KEY_B))\n        p.background=!p.background;\n\n\n    if(p.t>3600)//reset time for better precision\n        p.t=0;\n    if(p.voxel_size<0)\n        p.voxel_size=0.001;\n\n\t//calculate color under cursor\n    p.dbg=main(p.mouse_pos/p.extent*2-1);\n}\n\n\n\n"
                }
            ],
            "name": "Mandelbrot4D",
            "parameters": {
                "members": {
                    "accuracy": {
                        "data": [
                            118,
                            21,
                            116,
                            65
                        ],
                        "metadata": null,
                        "name": "accuracy",
                        "offset": 0,
                        "type": "float"
                    },
                    "ambientLight": {
                        "data": [
                            92,
                            -113,
                            2,
                            63
                        ],
                        "metadata": null,
                        "name": "ambientLight",
                        "offset": 156,
                        "type": "float"
                    },
                    "ax": {
                        "data": [
                            -80,
                            -109,
                            -112,
                            65
                        ],
                        "metadata": null,
                        "name": "ax",
                        "offset": 8,
                        "type": "float"
                    },
                    "az": {
                        "data": [
                            112,
                            57,
                            -128,
                            66
                        ],
                        "metadata": null,
                        "name": "az",
                        "offset": 12,
                        "type": "float"
                    },
                    "background": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "background",
                        "offset": 60,
                        "type": "uint"
                    },
                    "c": {
                        "data": [
                            -72,
                            -23,
                            -49,
                            62,
                            70,
                            37,
                            -91,
                            -66,
                            111,
                            42,
                            -110,
                            61,
                            95,
                            41,
                            43,
                            63
                        ],
                        "metadata": null,
                        "name": "c",
                        "offset": 32,
                        "type": "vec4"
                    },
                    "contrast": {
                        "data": [
                            -51,
                            49,
                            22,
                            64,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "contrast",
                        "offset": 16,
                        "type": "float"
                    },
                    "dbg": {
                        "data": [
                            -41,
                            52,
                            11,
                            61,
                            51,
                            0,
                            27,
                            61,
                            -58,
                            -53,
                            40,
                            61,
                            -102,
                            120,
                            55,
                            61
                        ],
                        "metadata": null,
                        "name": "dbg",
                        "offset": 224,
                        "type": "vec4"
                    },
                    "dt": {
                        "data": [
                            -70,
                            -13,
                            -124,
                            60
                        ],
                        "metadata": null,
                        "name": "dt",
                        "offset": 220,
                        "type": "float"
                    },
                    "extent": {
                        "data": [
                            0,
                            0,
                            32,
                            69,
                            0,
                            32,
                            -85,
                            68
                        ],
                        "metadata": null,
                        "name": "extent",
                        "offset": 176,
                        "type": "vec2"
                    },
                    "light_point": {
                        "data": [
                            -65,
                            71,
                            -3,
                            -66,
                            -124,
                            35,
                            -84,
                            63,
                            29,
                            103,
                            69,
                            63
                        ],
                        "metadata": null,
                        "name": "light_point",
                        "offset": 144,
                        "type": "vec3"
                    },
                    "lighting": {
                        "data": [
                            1,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "lighting",
                        "offset": 56,
                        "type": "uint"
                    },
                    "lmb_down": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "lmb_down",
                        "offset": 204,
                        "type": "uint"
                    },
                    "mmb_down": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "mmb_down",
                        "offset": 212,
                        "type": "uint"
                    },
                    "mouse_delta": {
                        "data": [
                            0,
                            0,
                            -118,
                            -62,
                            0,
                            0,
                            80,
                            -63
                        ],
                        "metadata": null,
                        "name": "mouse_delta",
                        "offset": 192,
                        "type": "vec2"
                    },
                    "mouse_pos": {
                        "data": [
                            0,
                            64,
                            58,
                            68,
                            0,
                            0,
                            41,
                            67
                        ],
                        "metadata": null,
                        "name": "mouse_pos",
                        "offset": 184,
                        "type": "vec2"
                    },
                    "mouse_wheel_delta": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "mouse_wheel_delta",
                        "offset": 200,
                        "type": "float"
                    },
                    "near": {
                        "data": [
                            40,
                            19,
                            110,
                            63
                        ],
                        "metadata": null,
                        "name": "near",
                        "offset": 128,
                        "type": "float"
                    },
                    "opacity": {
                        "data": [
                            114,
                            -7,
                            127,
                            63
                        ],
                        "metadata": null,
                        "name": "opacity",
                        "offset": 48,
                        "type": "float"
                    },
                    "previewScale": {
                        "data": [
                            -54,
                            -52,
                            -52,
                            63,
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "previewScale",
                        "offset": 168,
                        "type": "float"
                    },
                    "rmb_down": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "rmb_down",
                        "offset": 208,
                        "type": "uint"
                    },
                    "rotation": {
                        "data": [
                            -57,
                            -93,
                            -110,
                            62,
                            108,
                            -49,
                            46,
                            -65,
                            15,
                            13,
                            44,
                            -65,
                            0,
                            0,
                            0,
                            0,
                            -105,
                            70,
                            117,
                            63,
                            -31,
                            5,
                            81,
                            62,
                            69,
                            -71,
                            77,
                            62,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            -38,
                            -110,
                            51,
                            -65,
                            26,
                            116,
                            54,
                            63,
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "rotation",
                        "offset": 80,
                        "type": "mat3"
                    },
                    "showSpaceMesh": {
                        "data": [
                            1,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "showSpaceMesh",
                        "offset": 164,
                        "type": "uint"
                    },
                    "showUVRect": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "showUVRect",
                        "offset": 160,
                        "type": "uint"
                    },
                    "t": {
                        "data": [
                            -126,
                            -52,
                            93,
                            67
                        ],
                        "metadata": null,
                        "name": "t",
                        "offset": 216,
                        "type": "float"
                    },
                    "view_point": {
                        "data": [
                            57,
                            -52,
                            -31,
                            63,
                            -27,
                            94,
                            -40,
                            -66,
                            65,
                            18,
                            -123,
                            63,
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "view_point",
                        "offset": 64,
                        "type": "vec3"
                    },
                    "voxelMode": {
                        "data": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "voxelMode",
                        "offset": 52,
                        "type": "uint"
                    },
                    "voxel_size": {
                        "data": [
                            48,
                            -93,
                            29,
                            60,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "metadata": null,
                        "name": "voxel_size",
                        "offset": 132,
                        "type": "float"
                    },
                    "w": {
                        "data": [
                            -10,
                            40,
                            -36,
                            -66
                        ],
                        "metadata": null,
                        "name": "w",
                        "offset": 4,
                        "type": "float"
                    }
                },
                "size": 240
            }
        }
    }
}